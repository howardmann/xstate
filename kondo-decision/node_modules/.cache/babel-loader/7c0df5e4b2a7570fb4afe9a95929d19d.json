{"ast":null,"code":"import { __values } from './_virtual/_tslib.js';\nimport { keys, matchesState } from './utils.js';\n\nfunction mapState(stateMap, stateId) {\n  var e_1, _a;\n\n  var foundStateId;\n\n  try {\n    for (var _b = __values(keys(stateMap)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var mappedStateId = _c.value;\n\n      if (matchesState(mappedStateId, stateId) && (!foundStateId || stateId.length > foundStateId.length)) {\n        foundStateId = mappedStateId;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return stateMap[foundStateId];\n}\n\nexport { mapState };","map":{"version":3,"sources":["/Users/howardmann/Howie/practice/xstate/kondo-decision/node_modules/xstate/es/mapState.js"],"names":["__values","keys","matchesState","mapState","stateMap","stateId","e_1","_a","foundStateId","_b","_c","next","done","mappedStateId","value","length","e_1_1","error","return","call"],"mappings":"AAAA,SAASA,QAAT,QAAyB,sBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,QAAmC,YAAnC;;AAEA,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,OAA5B,EAAqC;AACnC,MAAIC,GAAJ,EAASC,EAAT;;AAEA,MAAIC,YAAJ;;AAEA,MAAI;AACF,SAAK,IAAIC,EAAE,GAAGT,QAAQ,CAACC,IAAI,CAACG,QAAD,CAAL,CAAjB,EAAmCM,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA7C,EAAwD,CAACD,EAAE,CAACE,IAA5D,EAAkEF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAvE,EAAkF;AAChF,UAAIE,aAAa,GAAGH,EAAE,CAACI,KAAvB;;AAEA,UAAIZ,YAAY,CAACW,aAAD,EAAgBR,OAAhB,CAAZ,KAAyC,CAACG,YAAD,IAAiBH,OAAO,CAACU,MAAR,GAAiBP,YAAY,CAACO,MAAxF,CAAJ,EAAqG;AACnGP,QAAAA,YAAY,GAAGK,aAAf;AACD;AACF;AACF,GARD,CAQE,OAAOG,KAAP,EAAc;AACdV,IAAAA,GAAG,GAAG;AACJW,MAAAA,KAAK,EAAED;AADH,KAAN;AAGD,GAZD,SAYU;AACR,QAAI;AACF,UAAIN,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBL,EAAE,GAAGE,EAAE,CAACS,MAA3B,CAAJ,EAAwCX,EAAE,CAACY,IAAH,CAAQV,EAAR;AACzC,KAFD,SAEU;AACR,UAAIH,GAAJ,EAAS,MAAMA,GAAG,CAACW,KAAV;AACV;AACF;;AAED,SAAOb,QAAQ,CAACI,YAAD,CAAf;AACD;;AAED,SAASL,QAAT","sourcesContent":["import { __values } from './_virtual/_tslib.js';\nimport { keys, matchesState } from './utils.js';\n\nfunction mapState(stateMap, stateId) {\n  var e_1, _a;\n\n  var foundStateId;\n\n  try {\n    for (var _b = __values(keys(stateMap)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var mappedStateId = _c.value;\n\n      if (matchesState(mappedStateId, stateId) && (!foundStateId || stateId.length > foundStateId.length)) {\n        foundStateId = mappedStateId;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return stateMap[foundStateId];\n}\n\nexport { mapState };"]},"metadata":{},"sourceType":"module"}