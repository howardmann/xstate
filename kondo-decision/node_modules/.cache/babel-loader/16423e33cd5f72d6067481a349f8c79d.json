{"ast":null,"code":"import { __values, __spread } from './_virtual/_tslib.js';\nimport { keys, flatten } from './utils.js';\n\nvar isLeafNode = function (stateNode) {\n  return stateNode.type === 'atomic' || stateNode.type === 'final';\n};\n\nfunction getChildren(stateNode) {\n  return keys(stateNode.states).map(function (key) {\n    return stateNode.states[key];\n  });\n}\n\nfunction getAllStateNodes(stateNode) {\n  var stateNodes = [stateNode];\n\n  if (isLeafNode(stateNode)) {\n    return stateNodes;\n  }\n\n  return stateNodes.concat(flatten(getChildren(stateNode).map(getAllStateNodes)));\n}\n\nfunction getConfiguration(prevStateNodes, stateNodes) {\n  var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n\n  var prevConfiguration = new Set(prevStateNodes);\n  var prevAdjList = getAdjList(prevConfiguration);\n  var configuration = new Set(stateNodes);\n\n  try {\n    // add all ancestors\n    for (var configuration_1 = __values(configuration), configuration_1_1 = configuration_1.next(); !configuration_1_1.done; configuration_1_1 = configuration_1.next()) {\n      var s = configuration_1_1.value;\n      var m = s.parent;\n\n      while (m && !configuration.has(m)) {\n        configuration.add(m);\n        m = m.parent;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (configuration_1_1 && !configuration_1_1.done && (_a = configuration_1.return)) _a.call(configuration_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  var adjList = getAdjList(configuration);\n\n  try {\n    // add descendants\n    for (var configuration_2 = __values(configuration), configuration_2_1 = configuration_2.next(); !configuration_2_1.done; configuration_2_1 = configuration_2.next()) {\n      var s = configuration_2_1.value; // if previously active, add existing child nodes\n\n      if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n        if (prevAdjList.get(s)) {\n          prevAdjList.get(s).forEach(function (sn) {\n            return configuration.add(sn);\n          });\n        } else {\n          s.initialStateNodes.forEach(function (sn) {\n            return configuration.add(sn);\n          });\n        }\n      } else {\n        if (s.type === 'parallel') {\n          try {\n            for (var _e = (e_3 = void 0, __values(getChildren(s))), _f = _e.next(); !_f.done; _f = _e.next()) {\n              var child = _f.value;\n\n              if (child.type === 'history') {\n                continue;\n              }\n\n              if (!configuration.has(child)) {\n                configuration.add(child);\n\n                if (prevAdjList.get(child)) {\n                  prevAdjList.get(child).forEach(function (sn) {\n                    return configuration.add(sn);\n                  });\n                } else {\n                  child.initialStateNodes.forEach(function (sn) {\n                    return configuration.add(sn);\n                  });\n                }\n              }\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (_f && !_f.done && (_c = _e.return)) _c.call(_e);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n        }\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (configuration_2_1 && !configuration_2_1.done && (_b = configuration_2.return)) _b.call(configuration_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  try {\n    // add all ancestors\n    for (var configuration_3 = __values(configuration), configuration_3_1 = configuration_3.next(); !configuration_3_1.done; configuration_3_1 = configuration_3.next()) {\n      var s = configuration_3_1.value;\n      var m = s.parent;\n\n      while (m && !configuration.has(m)) {\n        configuration.add(m);\n        m = m.parent;\n      }\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (configuration_3_1 && !configuration_3_1.done && (_d = configuration_3.return)) _d.call(configuration_3);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return configuration;\n}\n\nfunction getValueFromAdj(baseNode, adjList) {\n  var childStateNodes = adjList.get(baseNode);\n\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n\n  if (baseNode.type === 'compound') {\n    var childStateNode = childStateNodes[0];\n\n    if (childStateNode) {\n      if (isLeafNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n\n  var stateValue = {};\n  childStateNodes.forEach(function (csn) {\n    stateValue[csn.key] = getValueFromAdj(csn, adjList);\n  });\n  return stateValue;\n}\n\nfunction getAdjList(configuration) {\n  var e_5, _a;\n\n  var adjList = new Map();\n\n  try {\n    for (var configuration_4 = __values(configuration), configuration_4_1 = configuration_4.next(); !configuration_4_1.done; configuration_4_1 = configuration_4.next()) {\n      var s = configuration_4_1.value;\n\n      if (!adjList.has(s)) {\n        adjList.set(s, []);\n      }\n\n      if (s.parent) {\n        if (!adjList.has(s.parent)) {\n          adjList.set(s.parent, []);\n        }\n\n        adjList.get(s.parent).push(s);\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (configuration_4_1 && !configuration_4_1.done && (_a = configuration_4.return)) _a.call(configuration_4);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return adjList;\n}\n\nfunction getValue(rootNode, configuration) {\n  var config = getConfiguration([rootNode], configuration);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\n\nfunction has(iterable, item) {\n  if (Array.isArray(iterable)) {\n    return iterable.some(function (member) {\n      return member === item;\n    });\n  }\n\n  if (iterable instanceof Set) {\n    return iterable.has(item);\n  }\n\n  return false; // TODO: fix\n}\n\nfunction nextEvents(configuration) {\n  return flatten(__spread(new Set(configuration.map(function (sn) {\n    return sn.ownEvents;\n  }))));\n}\n\nfunction isInFinalState(configuration, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(function (s) {\n      return s.type === 'final' && has(configuration, s);\n    });\n  }\n\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(function (sn) {\n      return isInFinalState(configuration, sn);\n    });\n  }\n\n  return false;\n}\n\nexport { getAdjList, getAllStateNodes, getChildren, getConfiguration, getValue, has, isInFinalState, isLeafNode, nextEvents };","map":{"version":3,"sources":["/Users/howardmann/Howie/practice/xstate/kondo-decision/node_modules/xstate/es/stateUtils.js"],"names":["__values","__spread","keys","flatten","isLeafNode","stateNode","type","getChildren","states","map","key","getAllStateNodes","stateNodes","concat","getConfiguration","prevStateNodes","e_1","_a","e_2","_b","e_3","_c","e_4","_d","prevConfiguration","Set","prevAdjList","getAdjList","configuration","configuration_1","configuration_1_1","next","done","s","value","m","parent","has","add","e_1_1","error","return","call","adjList","configuration_2","configuration_2_1","get","length","forEach","sn","initialStateNodes","_e","_f","child","e_3_1","e_2_1","configuration_3","configuration_3_1","e_4_1","getValueFromAdj","baseNode","childStateNodes","childStateNode","stateValue","csn","e_5","Map","configuration_4","configuration_4_1","set","push","e_5_1","getValue","rootNode","config","iterable","item","Array","isArray","some","member","nextEvents","ownEvents","isInFinalState","every"],"mappings":"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","sourcesContent":["import { __values, __spread } from './_virtual/_tslib.js';\nimport { keys, flatten } from './utils.js';\n\nvar isLeafNode = function (stateNode) {\n  return stateNode.type === 'atomic' || stateNode.type === 'final';\n};\n\nfunction getChildren(stateNode) {\n  return keys(stateNode.states).map(function (key) {\n    return stateNode.states[key];\n  });\n}\n\nfunction getAllStateNodes(stateNode) {\n  var stateNodes = [stateNode];\n\n  if (isLeafNode(stateNode)) {\n    return stateNodes;\n  }\n\n  return stateNodes.concat(flatten(getChildren(stateNode).map(getAllStateNodes)));\n}\n\nfunction getConfiguration(prevStateNodes, stateNodes) {\n  var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n\n  var prevConfiguration = new Set(prevStateNodes);\n  var prevAdjList = getAdjList(prevConfiguration);\n  var configuration = new Set(stateNodes);\n\n  try {\n    // add all ancestors\n    for (var configuration_1 = __values(configuration), configuration_1_1 = configuration_1.next(); !configuration_1_1.done; configuration_1_1 = configuration_1.next()) {\n      var s = configuration_1_1.value;\n      var m = s.parent;\n\n      while (m && !configuration.has(m)) {\n        configuration.add(m);\n        m = m.parent;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (configuration_1_1 && !configuration_1_1.done && (_a = configuration_1.return)) _a.call(configuration_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  var adjList = getAdjList(configuration);\n\n  try {\n    // add descendants\n    for (var configuration_2 = __values(configuration), configuration_2_1 = configuration_2.next(); !configuration_2_1.done; configuration_2_1 = configuration_2.next()) {\n      var s = configuration_2_1.value; // if previously active, add existing child nodes\n\n      if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n        if (prevAdjList.get(s)) {\n          prevAdjList.get(s).forEach(function (sn) {\n            return configuration.add(sn);\n          });\n        } else {\n          s.initialStateNodes.forEach(function (sn) {\n            return configuration.add(sn);\n          });\n        }\n      } else {\n        if (s.type === 'parallel') {\n          try {\n            for (var _e = (e_3 = void 0, __values(getChildren(s))), _f = _e.next(); !_f.done; _f = _e.next()) {\n              var child = _f.value;\n\n              if (child.type === 'history') {\n                continue;\n              }\n\n              if (!configuration.has(child)) {\n                configuration.add(child);\n\n                if (prevAdjList.get(child)) {\n                  prevAdjList.get(child).forEach(function (sn) {\n                    return configuration.add(sn);\n                  });\n                } else {\n                  child.initialStateNodes.forEach(function (sn) {\n                    return configuration.add(sn);\n                  });\n                }\n              }\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (_f && !_f.done && (_c = _e.return)) _c.call(_e);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n        }\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (configuration_2_1 && !configuration_2_1.done && (_b = configuration_2.return)) _b.call(configuration_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  try {\n    // add all ancestors\n    for (var configuration_3 = __values(configuration), configuration_3_1 = configuration_3.next(); !configuration_3_1.done; configuration_3_1 = configuration_3.next()) {\n      var s = configuration_3_1.value;\n      var m = s.parent;\n\n      while (m && !configuration.has(m)) {\n        configuration.add(m);\n        m = m.parent;\n      }\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (configuration_3_1 && !configuration_3_1.done && (_d = configuration_3.return)) _d.call(configuration_3);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return configuration;\n}\n\nfunction getValueFromAdj(baseNode, adjList) {\n  var childStateNodes = adjList.get(baseNode);\n\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n\n  if (baseNode.type === 'compound') {\n    var childStateNode = childStateNodes[0];\n\n    if (childStateNode) {\n      if (isLeafNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n\n  var stateValue = {};\n  childStateNodes.forEach(function (csn) {\n    stateValue[csn.key] = getValueFromAdj(csn, adjList);\n  });\n  return stateValue;\n}\n\nfunction getAdjList(configuration) {\n  var e_5, _a;\n\n  var adjList = new Map();\n\n  try {\n    for (var configuration_4 = __values(configuration), configuration_4_1 = configuration_4.next(); !configuration_4_1.done; configuration_4_1 = configuration_4.next()) {\n      var s = configuration_4_1.value;\n\n      if (!adjList.has(s)) {\n        adjList.set(s, []);\n      }\n\n      if (s.parent) {\n        if (!adjList.has(s.parent)) {\n          adjList.set(s.parent, []);\n        }\n\n        adjList.get(s.parent).push(s);\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (configuration_4_1 && !configuration_4_1.done && (_a = configuration_4.return)) _a.call(configuration_4);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return adjList;\n}\n\nfunction getValue(rootNode, configuration) {\n  var config = getConfiguration([rootNode], configuration);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\n\nfunction has(iterable, item) {\n  if (Array.isArray(iterable)) {\n    return iterable.some(function (member) {\n      return member === item;\n    });\n  }\n\n  if (iterable instanceof Set) {\n    return iterable.has(item);\n  }\n\n  return false; // TODO: fix\n}\n\nfunction nextEvents(configuration) {\n  return flatten(__spread(new Set(configuration.map(function (sn) {\n    return sn.ownEvents;\n  }))));\n}\n\nfunction isInFinalState(configuration, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(function (s) {\n      return s.type === 'final' && has(configuration, s);\n    });\n  }\n\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(function (sn) {\n      return isInFinalState(configuration, sn);\n    });\n  }\n\n  return false;\n}\n\nexport { getAdjList, getAllStateNodes, getChildren, getConfiguration, getValue, has, isInFinalState, isLeafNode, nextEvents };"]},"metadata":{},"sourceType":"module"}