{"ast":null,"code":"var _jsxFileName = \"/Users/howardmann/Howie/practice/xstate/kondo-decision/src/components/IssueCard.js\";\nimport React from 'react';\nimport { useMachine } from '@xstate/react';\nimport actionMachine from '../stateMachines/actionMachine';\nconst initialData = {\n  name: 'Excessive operation',\n  status: 'In Progress',\n  assignee: 'bill'\n};\n\nconst ActionButton = ({\n  action,\n  send\n}) => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => send(action),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, action);\n};\n\nconst IssueCard = ({\n  data = initialData\n}) => {\n  // React Issue State\n  const [issue, setIssue] = React.useState(data); // xState machine with initial context of issue status\n\n  const [current, send] = useMachine(actionMachine.withContext({\n    status: issue.status\n  })); // Update React State when change to xState context\n\n  React.useEffect(() => {\n    setIssue({ ...issue,\n      status: current.context.status\n    });\n  }, [current.context]); // Boot xState on load. Sets context to status based on initial context\n\n  React.useEffect(() => {\n    send('INIT');\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      border: '1px solid pink'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Name: \", issue.name), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Assignee: \", issue.assignee), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Status: \", issue.status), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"current.value: \", JSON.stringify(current.value)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"current.context: \", JSON.stringify(current.context))), current.matches('status.new') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"APPROVE\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"REJECT\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"HOLD\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), current.matches('status.inProgress') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"REJECT\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"HOLD\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"DONE\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), current.matches('status.onHold') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"APPROVE\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"REJECT\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), current.matches('status.notDoing') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"APPROVE\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"HOLD\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default IssueCard;","map":{"version":3,"sources":["/Users/howardmann/Howie/practice/xstate/kondo-decision/src/components/IssueCard.js"],"names":["React","useMachine","actionMachine","initialData","name","status","assignee","ActionButton","action","send","IssueCard","data","issue","setIssue","useState","current","withContext","useEffect","context","border","JSON","stringify","value","matches"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useMachine} from '@xstate/react'\nimport actionMachine from '../stateMachines/actionMachine'\n\nconst initialData = {\n  name: 'Excessive operation',\n  status: 'In Progress',\n  assignee: 'bill'\n}\n\nconst ActionButton = ({action, send}) => {\n  return (\n    <button onClick={() => send(action)}>{action}</button>\n  )\n}\n\nconst IssueCard = ({data = initialData}) => {\n  // React Issue State\n  const [issue, setIssue] = React.useState(data)  \n\n  // xState machine with initial context of issue status\n  const [current, send] = useMachine(actionMachine.withContext({status: issue.status}))\n\n  // Update React State when change to xState context\n  React.useEffect(() => {\n    setIssue({...issue, status: current.context.status})\n  }, [current.context])\n\n  // Boot xState on load. Sets context to status based on initial context\n  React.useEffect(() => {\n    send('INIT')\n  })\n\n\n  return (\n    <ul style={{border: '1px solid pink'}}>\n      <li>Name: {issue.name}</li>\n      <li>Assignee: {issue.assignee}</li>\n      <li>Status: {issue.status}</li>\n\n      <small>\n        <p>current.value: {JSON.stringify(current.value)}</p>\n        <p>current.context: {JSON.stringify(current.context)}</p>\n      </small>      \n\n      {current.matches('status.new') &&\n        <>\n          <ActionButton action=\"APPROVE\" send={send}/>\n          <ActionButton action=\"REJECT\" send={send}/>\n          <ActionButton action=\"HOLD\" send={send}/>\n        </>\n      }\n\n      {current.matches('status.inProgress') &&\n        <>\n          <ActionButton action=\"REJECT\" send={send}/>\n          <ActionButton action=\"HOLD\" send={send}/>\n          <ActionButton action=\"DONE\" send={send}/>\n        </>\n      }\n\n      {current.matches('status.onHold') &&\n        <>\n          <ActionButton action=\"APPROVE\" send={send}/>\n          <ActionButton action=\"REJECT\" send={send}/>\n        </>\n      }\n\n      {current.matches('status.notDoing') &&\n        <>\n          <ActionButton action=\"APPROVE\" send={send}/>\n          <ActionButton action=\"HOLD\" send={send}/>\n        </>\n      }\n\n    </ul>\n  )\n}\n\nexport default IssueCard"]},"metadata":{},"sourceType":"module"}