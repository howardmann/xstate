{"ast":null,"code":"import { __values, __assign, __spread } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, keys, toSCXMLEvent, toInvokeSource, isPromiseLike, isObservable, isMachine, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, uniqueId } from './utils.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { isState, State, bindActionToState } from './State.js';\nimport { provide, consume } from './serviceScope.js';\nimport { isActor, createDeferredActor } from './Actor.js';\nimport { Scheduler } from './scheduler.js';\nimport { registry } from './registry.js';\nimport { registerService } from './devTools.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.scheduler = new Scheduler();\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this._status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this._status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to stopped service \\\"\" + _this.machine.id + \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n\n        return _this.state;\n      }\n\n      if (_this._status === InterpreterStatus.NotStarted && _this.options.deferEvents) {\n        // tslint:disable-next-line:no-console\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\" and is deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n      } else if (_this._status !== InterpreterStatus.Running) {\n        throw new Error(\"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \" + JSON.stringify(_event.data));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isActor(to) ? to : _this.children.get(to) || registry.get(to);\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\" + to + \"' from service '\" + _this.id + \"'.\");\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\" + _this.id + \"' has no parent: unable to send event \" + event.type);\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\" + error(_this.id) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this._status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\" + this.id + \"'. Make sure the service is started first.\");\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Dev tools\n\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      this.onDone(resolvedCompleteListener);\n    }\n\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this._status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isState(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    } // Stop all children\n\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.initialized = false;\n    this._status = InterpreterStatus.Stopped;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(event));\n      }\n    } else if (this._status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\");\n    }\n\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spread(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\" + event + \"' from interpreter '\" + this.id + \"' to nonexistant child '\" + id + \"'.\");\n        }\n\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.id || activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var invokeSource = toInvokeSource(activity.src);\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[invokeSource.type] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\" + activity.src + \"' in in machine '\" + this.machine.id + \"'). \" + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\" + activity.src + \"' in machine '\" + this.machine.id + \"'.\");\n              }\n\n              return;\n            }\n\n            var resolvedData = data ? mapContext(data, context, _event) : undefined;\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n              data: resolvedData,\n              src: invokeSource\n            }) : serviceCreator;\n\n            if (isPromiseLike(source)) {\n              this.state.children[id] = this.spawnPromise(Promise.resolve(source), id);\n            } else if (isFunction(source)) {\n              this.state.children[id] = this.spawnCallback(source, id);\n            } else if (isObservable(source)) {\n              this.state.children[id] = this.spawnObservable(source, id);\n            } else if (isMachine(source)) {\n              // TODO: try/catch here\n              this.state.children[id] = this.spawnMachine(resolvedData ? source.withContext(resolvedData) : source, {\n                id: id,\n                autoForward: autoForward\n              });\n            }\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\" + action.type + \"'\");\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    this.children.delete(childId);\n    this.forwardTo.delete(childId);\n    delete this.state.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isActor(entity)) {\n      return this.spawnActor(entity);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\" + name + \"\\\" of type \\\"\" + typeof entity + \"\\\".\");\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _this = this;\n\n    var canceled = false;\n    promise.then(function (response) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          next && next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          complete && complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          handleError(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n\n    var receive = function (e) {\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(e);\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        listeners.add(next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _this = this;\n\n    var subscription = source.subscribe(function (value) {\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor) {\n    this.children.set(actor.id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\" + activity.type + \"'\");\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    this.children.set(id, {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    });\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    if (this.options.devTools && typeof window !== 'undefined') {\n      if (window.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = /*#__PURE__*/function (global) {\n    return {\n      execute: true,\n      deferEvents: true,\n      clock: {\n        setTimeout: function (fn, ms) {\n          return global.setTimeout.call(null, fn, ms);\n        },\n        clearTimeout: function (id) {\n          return global.clearTimeout.call(null, id);\n        }\n      },\n      logger: global.console.log.bind(console),\n      devTools: false\n    };\n  }(typeof self !== 'undefined' ? self : global);\n\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\" + (isMachine(entity) ? entity.id : 'undefined') + \"\\\") outside of a service. This will have no effect.\");\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, interpret, spawn };","map":{"version":3,"sources":["/Users/howardmann/Howie/practice/xstate/kondo-decision/node_modules/xstate/es/interpreter.js"],"names":["__values","__assign","__spread","IS_PRODUCTION","warn","mapContext","isFunction","keys","toSCXMLEvent","toInvokeSource","isPromiseLike","isObservable","isMachine","reportUnhandledExceptionOnInvocation","symbolObservable","isArray","toEventObject","isString","uniqueId","ActionTypes","SpecialTargets","isInFinalState","errorPlatform","log","stop","start","cancel","send","update","error","error$1","doneInvoke","initEvent","getActionFunction","isState","State","bindActionToState","provide","consume","isActor","createDeferredActor","Scheduler","registry","registerService","DEFAULT_SPAWN_OPTIONS","sync","autoForward","InterpreterStatus","Interpreter","machine","options","_this","defaultOptions","scheduler","delayedEventsMap","listeners","Set","contextListeners","stopListeners","doneListeners","eventListeners","sendListeners","initialized","_status","NotStarted","children","Map","forwardTo","init","event","payload","batch","state","_event","Stopped","name","id","JSON","stringify","data","deferEvents","Running","Error","schedule","forward","nextState","_state","sendTo","to","isParent","parent","Parent","target","get","type","origin","sessionId","resolvedOptions","clock","logger","resolvedId","undefined","bookId","Object","defineProperty","prototype","_initialState","initialState","enumerable","configurable","execute","actionsConfig","e_1","_a","_b","actions","_c","next","done","action","value","exec","e_1_1","return","call","e_2","e_3","e_4","e_5","_d","_sessionid","devTools","_e","_f","listener","e_2_1","_g","_h","e_3_1","_j","_k","contextListener","context","history","e_4_1","isDone","configuration","finalChildStateNode","find","sn","doneData","_l","_m","e_5_1","onTransition","add","subscribe","nextListenerOrObserver","_","completeListener","unsubscribe","resolvedCompleteListener","bind","complete","onDone","delete","onEvent","onSend","onChange","onStop","off","register","resolvedState","resolveState","from","attachDev","initialize","e_6","e_7","e_8","e_9","e_10","e_6_1","e_7_1","e_8_1","_o","e_9_1","forEach","child","_p","_q","key","clearTimeout","e_10_1","clear","free","events","length","e_11","batchChanged","batchedActions","_loop_1","event_1","transition","push","apply","map","a","changed","events_1","events_1_1","e_11_1","sender","indexOf","nextEvents","some","nextEvent","e_12","e_12_1","defer","sendAction","setTimeout","delay","sendId","actionFunctionMap","actionOrExec","err","activity","activities","Invoke","invokeSource","src","serviceCreator","services","resolvedData","source","spawnPromise","Promise","resolve","spawnCallback","spawnObservable","spawnMachine","withContext","spawnActivity","stopChild","label","removeChild","childId","spawn","entity","spawnActor","childService","actor","set","doneEvent","promise","canceled","then","response","errorData","errorEvent","strict","handleError","unsubscribed","toJSON","callback","receivers","receive","e","callbackStop","newListener","receiver","subscription","implementation","dispose","spawnEffect","window","__REDUX_DEVTOOLS_EXTENSION__","devToolsOptions","connect","autoPause","stateSanitizer","features","jump","skip","global","fn","ms","console","self","interpret","resolveSpawnOptions","nameOrOptions","service","isLazyEntity","interpreter"],"mappings":"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","sourcesContent":["import { __values, __assign, __spread } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, keys, toSCXMLEvent, toInvokeSource, isPromiseLike, isObservable, isMachine, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, uniqueId } from './utils.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { isState, State, bindActionToState } from './State.js';\nimport { provide, consume } from './serviceScope.js';\nimport { isActor, createDeferredActor } from './Actor.js';\nimport { Scheduler } from './scheduler.js';\nimport { registry } from './registry.js';\nimport { registerService } from './devTools.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.scheduler = new Scheduler();\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this._status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this._status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to stopped service \\\"\" + _this.machine.id + \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n\n        return _this.state;\n      }\n\n      if (_this._status === InterpreterStatus.NotStarted && _this.options.deferEvents) {\n        // tslint:disable-next-line:no-console\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\" and is deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n      } else if (_this._status !== InterpreterStatus.Running) {\n        throw new Error(\"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \" + JSON.stringify(_event.data));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isActor(to) ? to : _this.children.get(to) || registry.get(to);\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\" + to + \"' from service '\" + _this.id + \"'.\");\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\" + _this.id + \"' has no parent: unable to send event \" + event.type);\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\" + error(_this.id) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this._status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\" + this.id + \"'. Make sure the service is started first.\");\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Dev tools\n\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      this.onDone(resolvedCompleteListener);\n    }\n\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this._status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isState(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    } // Stop all children\n\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.initialized = false;\n    this._status = InterpreterStatus.Stopped;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(event));\n      }\n    } else if (this._status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\");\n    }\n\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spread(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\" + event + \"' from interpreter '\" + this.id + \"' to nonexistant child '\" + id + \"'.\");\n        }\n\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.id || activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var invokeSource = toInvokeSource(activity.src);\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[invokeSource.type] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\" + activity.src + \"' in in machine '\" + this.machine.id + \"'). \" + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\" + activity.src + \"' in machine '\" + this.machine.id + \"'.\");\n              }\n\n              return;\n            }\n\n            var resolvedData = data ? mapContext(data, context, _event) : undefined;\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n              data: resolvedData,\n              src: invokeSource\n            }) : serviceCreator;\n\n            if (isPromiseLike(source)) {\n              this.state.children[id] = this.spawnPromise(Promise.resolve(source), id);\n            } else if (isFunction(source)) {\n              this.state.children[id] = this.spawnCallback(source, id);\n            } else if (isObservable(source)) {\n              this.state.children[id] = this.spawnObservable(source, id);\n            } else if (isMachine(source)) {\n              // TODO: try/catch here\n              this.state.children[id] = this.spawnMachine(resolvedData ? source.withContext(resolvedData) : source, {\n                id: id,\n                autoForward: autoForward\n              });\n            }\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\" + action.type + \"'\");\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    this.children.delete(childId);\n    this.forwardTo.delete(childId);\n    delete this.state.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isActor(entity)) {\n      return this.spawnActor(entity);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\" + name + \"\\\" of type \\\"\" + typeof entity + \"\\\".\");\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _this = this;\n\n    var canceled = false;\n    promise.then(function (response) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          next && next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          complete && complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          handleError(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n\n    var receive = function (e) {\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(e);\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        listeners.add(next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _this = this;\n\n    var subscription = source.subscribe(function (value) {\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor) {\n    this.children.set(actor.id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\" + activity.type + \"'\");\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    this.children.set(id, {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    });\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    if (this.options.devTools && typeof window !== 'undefined') {\n      if (window.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = /*#__PURE__*/function (global) {\n    return {\n      execute: true,\n      deferEvents: true,\n      clock: {\n        setTimeout: function (fn, ms) {\n          return global.setTimeout.call(null, fn, ms);\n        },\n        clearTimeout: function (id) {\n          return global.clearTimeout.call(null, id);\n        }\n      },\n      logger: global.console.log.bind(console),\n      devTools: false\n    };\n  }(typeof self !== 'undefined' ? self : global);\n\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\" + (isMachine(entity) ? entity.id : 'undefined') + \"\\\") outside of a service. This will have no effect.\");\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, interpret, spawn };"]},"metadata":{},"sourceType":"module"}