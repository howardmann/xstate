{"ast":null,"code":"var _jsxFileName = \"/Users/howardmann/Howie/practice/xstate/kondo-decision/src/components/IssueCard.js\";\nimport React from 'react';\nimport { useMachine } from '@xstate/react';\nimport actionMachine from '../stateMachines/actionMachine';\nconst initialData = {\n  name: 'Excessive operation',\n  status: 'New',\n  assignee: 'bill'\n};\nconst initialContext = {};\n\nconst ActionButton = ({\n  action,\n  send\n}) => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => send(action),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, action);\n};\n\nconst IssueCard = ({\n  data = initialData\n}) => {\n  const [issue, setIssue] = React.useState(data);\n  const [current, send] = useMachine(actionMachine);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Name: \", issue.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Assignee: \", issue.assignee), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Status: \", issue.status), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Current: \", current.value.status), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Actions\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"current.value: \", JSON.stringify(current.value)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"current.context: \", JSON.stringify(current.context))), current.matches('status.new') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"APPROVE\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"REJECT\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"HOLD\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), current.matches('status.inProgress') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"REJECT\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"HOLD\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"DONE\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), current.matches('status.onHold') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"APPROVE\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"REJECT\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), current.matches('status.notDoing') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"APPROVE\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    action: \"HOLD\",\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default IssueCard;","map":{"version":3,"sources":["/Users/howardmann/Howie/practice/xstate/kondo-decision/src/components/IssueCard.js"],"names":["React","useMachine","actionMachine","initialData","name","status","assignee","initialContext","ActionButton","action","send","IssueCard","data","issue","setIssue","useState","current","value","JSON","stringify","context","matches"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useMachine} from '@xstate/react'\nimport actionMachine from '../stateMachines/actionMachine'\n\nconst initialData = {\n  name: 'Excessive operation',\n  status: 'New',\n  assignee: 'bill'\n}\n\nconst initialContext = {\n  \n}\n\nconst ActionButton = ({action, send}) => {\n  return (\n    <button onClick={() => send(action)}>{action}</button>\n  )\n}\n\nconst IssueCard = ({data = initialData}) => {\n  const [issue, setIssue] = React.useState(data)\n\n  const [current, send] = useMachine(actionMachine)\n\n\n  return (\n    <div>\n      <p>Name: {issue.name}</p>\n      <p>Assignee: {issue.assignee}</p>\n      <p>Status: {issue.status}</p>\n      <p>Current: {current.value.status}</p>\n      <p>Actions</p>\n\n      <small>\n        <p>current.value: {JSON.stringify(current.value)}</p>\n        <p>current.context: {JSON.stringify(current.context)}</p>\n      </small>      \n\n      {current.matches('status.new') &&\n        <>\n          <ActionButton action=\"APPROVE\" send={send}/>\n          <ActionButton action=\"REJECT\" send={send}/>\n          <ActionButton action=\"HOLD\" send={send}/>\n        </>\n      }\n\n      {current.matches('status.inProgress') &&\n        <>\n          <ActionButton action=\"REJECT\" send={send}/>\n          <ActionButton action=\"HOLD\" send={send}/>\n          <ActionButton action=\"DONE\" send={send}/>\n        </>\n      }\n\n      {current.matches('status.onHold') &&\n        <>\n          <ActionButton action=\"APPROVE\" send={send}/>\n          <ActionButton action=\"REJECT\" send={send}/>\n        </>\n      }\n\n      {current.matches('status.notDoing') &&\n        <>\n          <ActionButton action=\"APPROVE\" send={send}/>\n          <ActionButton action=\"HOLD\" send={send}/>\n        </>\n      }\n\n\n    </div>\n  )\n}\n\nexport default IssueCard"]},"metadata":{},"sourceType":"module"}